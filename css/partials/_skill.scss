// Define colors
$color-black: hsl(0, 0%, 5%);
$color-white: hsl(0, 0%, 100%);

$colors: (
  html: hsl(15, 100%, 60%),
  css: hsl(200, 100%, 60%),
  scss: hsl(300, 100%, 60%),
  js: hsl(60, 100%, 60%),
  ts: hsl(220, 100%, 60%),
  angular: hsl(0, 100%, 60%),
  communication: hsl(145, 100%, 60%),
  cooperation: hsl(189, 100%, 60%),
  empathy: hsl(73, 100%, 60%),
  listening: hsl(285, 100%, 60%),
  teamwork: hsl(251, 100%, 60%),
  problem: hsl(0, 100%, 60%),
  php: hsl(110, 100%, 60%),
  mysql: hsl(180, 100%, 60%),
  symfony: hsl(145, 100%, 60%)
);

// Define percentages for skills
$skill-percentages: (
  html: 85,
  css: 75,
  scss: 70,
  js: 60,
  ts: 60,
  angular: 55,
  communication: 98,
  cooperation: 85,
  empathy: 95,
  listening: 86,
  teamwork: 94,
  problem: 90,
  php: 70,
  mysql: 70,
  symfony: 55
);

@function strokeDashoffset($num) {
  @return (440 - calc((440 * $num) / 100));
}

* {
  box-sizing: border-box;
}

.container__progressbars {
  display: flex;
  justify-content: space-around;
  align-items: center;
  flex-wrap: wrap;
  min-width: 270px;
  width: 100%;
  min-height: 100%;
}

.progressbar {
  position: relative;
  width: 170px;
  height: 170px;
  margin: 1em;
  transform: rotate(-90deg);
}

.progressbar__svg {
  position: relative;
  width: 100%;
  height: 100%;
}

.progressbar__svg-circle {
  width: 100%;
  height: 100%;
  fill: none;
  stroke-width: 10;
  stroke-dasharray: 440;
  stroke-dashoffset: 440;
  stroke: $color-white;
  stroke-linecap: round;
  transform: translate(5px, 5px); // stroke-width / 2
}

// Define shadow mixins
@mixin shadow($color) {
  filter: drop-shadow(0 0 5px $color);
}

// Apply shadows
@each $key, $value in $colors {
  .shadow-#{$key} {
    @include shadow($value);
  }
}

// Define animation mixins
@mixin circle-animation($name, $percentage) {
  @keyframes anim_circle-#{$name} {
    to {
      stroke-dashoffset: strokeDashoffset($percentage);
    }
  }
}

// Apply animations
@each $key, $value in $skill-percentages {
  .circle-#{$key} {
    animation: circle-animation(#{$key}, #{$value}) 1s ease-in-out forwards;
  }
}

.progressbar__text {
  position: absolute;
  top: 50%;
  left: 50%;
  padding: 0.25em 0.5em;
  color: $color-white;
  border-radius: 0.25em;
  transform: translate(-50%, -50%) rotate(90deg);
}